% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dynamics.R
\name{streamlines}
\alias{streamlines}
\alias{flow_field}
\title{Dynamical systems calculations and graphics}
\usage{
streamlines(
  first,
  ...,
  domain = NULL,
  npts = 4,
  dt = 0.01,
  nsteps = 10,
  color = "black",
  alpha = 1
)

flow_field(
  first,
  ...,
  domain = NULL,
  npts = 4,
  scale = 0.8,
  color = "black",
  alpha = 1
)
}
\arguments{
\item{first}{Ignore this. It is a stub to handle piping a graphics
layer into the function call.}

\item{...}{The first arguments should describe the dynamics. See details.}

\item{npts}{The number of points on an edge of the grid}

\item{dt}{Time step for integrating the streamlines.}

\item{nsteps}{How many steps to take for each streamline. Together with \code{dt}
this determines the length of the streamline.}

\item{color}{What color to use}

\item{alpha}{What alpha to use}

\item{scale}{Number indicating how long to draw arrows. By default,
the longest arrows take up a full box in the grid}
}
\description{
\itemize{
\item \code{streamlines()} draws raindrop-shaped paths at a randomized grid of points that follow trajectories
\item \code{flow_field()} draws arrows showing the flow at a grid of points
}
}
\details{
The dynamical functions themselves will be formulas like \code{dx ~ a*x*y} and \code{dy ~ y/x}.
Initial conditions will be arguments of the form \code{x=3} and \code{y=4}.
If there are parameters in the dynamical functions, you should also
add the parameter values, for instance \code{a=2}.

For \code{flow_field()} and \code{streamlines()} you do not need to specify
initial conditions. The grid will be set by the domain argument.

NEED TO ADD THE REPLACEMENT FOR \code{integrateODE()}.

The graphics functions are all arranged to accept,
if given, a ggplot object piped in. The new graphics layer will be drawn on
top of that. If there is no ggplot object piped in, then the graphics
will be made as a first layer, which can optionally piped into other
ggformula functions or \code{+} into ggplot layers.
}
\examples{
streamlines(dx ~ x+y, dy~ x-y, domain=domain(x=0:6, y=0:3), npts=20, dt=0.01, alpha=.6, color="blue")
flow_field(dx ~ x+y, dy~ x-y, domain=domain(x=0:6, y=0:3), npts=20, scale=1)
}
